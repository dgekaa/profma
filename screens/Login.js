import React, {useState, useEffect} from 'react';

import {Text, StyleSheet, View, TouchableOpacity} from 'react-native';
import {ButtonDefault, ButtonDisabled, ButtonError} from '../components/Button';
import {InputWithText, InputWithPassword} from '../components/Input';
import BackgroundHeader from '../components/BackgroundHeader';

const Login = ({navigation}) => {
  const {
    container,
    topTextWrap,
    ProfMa,
    topText,
    inputGroup,
    login,
    politic,
    politicText,
    specialText,
  } = stylesClientRegistration;

  const [iconName, setIconName] = useState('openedEye');
  const [hidePassword, setHidePassword] = useState(true);
  const [fillErr, setFillErr] = useState('');
  const [validationErr, setValidationErr] = useState('');
  const [regBtnText, setRegBtnText] = useState('');

  const openCloseEye = () => {
    if (iconName === 'openedEye') {
      setIconName('closedEye');
      setHidePassword(true);
    } else {
      setIconName('openedEye');
      setHidePassword(false);
    }
  };

  useEffect(() => {
    fillErr
      ? setRegBtnText('–ù–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏')
      : validationErr
      ? setRegBtnText('–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–µ–¥—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ')
      : setRegBtnText('–í–æ–π—Ç–∏');
  }, [fillErr, validationErr]);

  const onChangeText = text => {
    console.log(text);
  };

  return (
    <View style={{flex: 1}}>
      <BackgroundHeader blackArrow={true} navigation={navigation} />
      <View style={container}>
        <View style={topTextWrap}>
          <Text style={ProfMa}>Prof.Ma</Text>
          <Text style={topText}>
            –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µüòé
          </Text>
        </View>
        <View style={inputGroup}>
          <InputWithText
            text="–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã"
            placeholder="example@site.com"
            keyboardType="email-address"
            validationErr={validationErr}
            onChangeText={onChangeText}
          />
          <InputWithPassword
            text="–ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å"
            placeholder="–±—É–¥–µ—Ç PLACEHOLDER"
            secureTextEntry={hidePassword}
            icon={iconName}
            onPress={openCloseEye}
            forgetPassword={true}
            validationErr={validationErr}
            onPressPassRecovery={() => {
              navigation.navigate('PasswordRecovery');
            }}
            onChangeText={onChangeText}
          />
        </View>
        <View style={login}>
          <View style={politic}>
            <Text style={politicText}>
              <Text>–ù–∞–∂–∏–º–∞—è ‚Äú–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è‚Äù, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –Ω–∞—à–µ–π</Text>
              <Text style={specialText}> –ü–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</Text> –∏
              <Text style={specialText}> –£—Å–ª–æ–≤–∏—è–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</Text>
            </Text>
          </View>
          {!!fillErr && !validationErr && <ButtonDisabled title={regBtnText} />}
          {!fillErr && !validationErr && (
            <ButtonDefault
              title={regBtnText}
              active={true}
              onPress={() => navigation.navigate('Main')}
            />
          )}
          {!!validationErr && <ButtonError title={regBtnText} />}
        </View>
      </View>
    </View>
  );
};

const stylesClientRegistration = StyleSheet.create({
  container: {
    flex: 1,
    paddingHorizontal: 8,
  },
  topTextWrap: {
    flex: 3,
    paddingHorizontal: 12,
  },
  ProfMa: {
    fontFamily: 'Futura PT',
    fontSize: 23,
    color: '#B986DA',
    fontWeight: 'bold',
    width: '75%',
  },
  topText: {
    color: '#011627',
    fontWeight: 'bold',
    fontFamily: 'Futura PT',
    fontSize: 23,
    marginTop: 16,
    width: '85%',
  },
  inputGroup: {
    flex: 5,
  },
  login: {
    flex: 2.5,
  },
  politic: {
    textAlign: 'center',
    paddingHorizontal: 30,
    paddingBottom: 15,
  },
  politicText: {
    textAlign: 'center',
    fontFamily: 'Futura PT',
  },
  specialText: {
    fontFamily: 'Futura PT',
    fontSize: 13,
    color: '#B986DA',
  },
});

export default Login;
