import React, {useState, useEffect} from 'react';

import BackgroundHeader from '../../components/BackgroundHeader';
import {InputWithText, InputWithPassword} from '../../components/Input';
import {ButtonDisabled, ButtonDefault} from '../../components/Button';
import SaveSuccess from '../../components/SaveSuccess';

import {Text, View, StyleSheet, ScrollView} from 'react-native';
import {TextInput} from 'react-native-gesture-handler';

const Border = () => (
  <View
    style={{height: 0.5, backgroundColor: '#aaa', marginLeft: 16, opacity: 0.5}}
  />
);

const PersonalDataMaster = ({navigation}) => {
  const {blockTitle, groupBlock} = styles;

  const [showBtn, setShowBtn] = useState(false);
  const [name, setName] = useState(false);
  const [inputLength, setInputLength] = useState(0);
  const [savedSuccess, setSavedSuccess] = useState(false);

  useEffect(() => {
    name ? setShowBtn(true) : setShowBtn(false);
  }, [name]);

  return (
    <View style={{flex: 1}}>
      <BackgroundHeader navigation={navigation} />
      <ScrollView>
        <View style={{flex: 1, paddingHorizontal: 8}}>
          <View style={{flex: 1}}>
            <Text style={blockTitle}>–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</Text>
            <View style={[groupBlock, {marginBottom: 16}]}>
              <InputWithText
                text="–í–∞—à–µ –∏–º—è"
                placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –∏–º—è"
                withoutShadow={true}
                onChangeText={text => {
                  setName(text);
                }}
              />
              <Border />
              <InputWithText
                text="–í–∞—à e-mail"
                placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å e-mail"
                withoutShadow={true}
              />
              <Border />
              <InputWithText
                text="–í–∞—à –º–æ–±–∏–ª—å–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω"
                placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                withoutShadow={true}
              />
              <Border />
              <InputWithText
                style={{fontSize: 13}}
                text="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –Ω–æ–º–µ—Ä –º–æ–±–∏–ª—å–Ω–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                withoutShadow={true}
              />
            </View>
            <View style={[groupBlock, {marginBottom: 16}]}>
              <InputWithText
                text="–ì–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ"
                placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –≥–æ—Ä–æ–¥"
                withoutShadow={true}
                onChangeText={text => {
                  setName(text);
                }}
              />
              <Border />
              <InputWithText
                text="–î–æ–º–∞—à–Ω–∏–π –∞–¥—Ä–µ—Å (–Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –≤—ã–µ–∑–¥–æ–º)"
                placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –∞–¥—Ä–µ—Å"
                withoutShadow={true}
              />
              <Border />
              <InputWithText
                text="–†–∞–±–æ—á–∏–π –∞–¥—Ä–µ—Å (–Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è –≤–∞—à–∏—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤)"
                placeholder="–ù–∞—á–Ω–∏—Ç–µ –≤–≤–æ–¥–∏—Ç—å –∞–¥—Ä–µ—Å"
                withoutShadow={true}
              />
              <Border />
              <InputWithText
                style={{fontSize: 13}}
                text="–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –∏–ª–∏ —Å—Ç—Ä–∞–Ω–∏—á–∫–∞ —Å –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ"
                placeholder="–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å —Å—Ç—Ä–∞–Ω–∏—á–∫–∏ —Å –≤–∞—à–∏–º–∏ —Ä–∞–±–æ—Ç–∞–º–∏"
                withoutShadow={true}
              />
            </View>
            <View
              style={{
                flexDirection: 'row',
                alignItems: 'center',
                justifyContent: 'space-between',
              }}>
              <Text style={blockTitle}>–Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ</Text>
              <View
                style={{marginTop: 20, paddingRight: 8, flexDirection: 'row'}}>
                <Text style={{color: '#ff3d48'}}>{inputLength}</Text>
                <Text style={{color: '#D4D7DA'}}>\140</Text>
              </View>
            </View>
            <View
              style={[groupBlock, {marginBottom: 16, paddingHorizontal: 16}]}>
              <TextInput
                maxLength={140}
                onChangeText={text => {
                  setInputLength(text.length);
                }}
                returnKeyLabel="go"
                multiline={true}
                placeholder="–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ, —Å–≤–æ–∏—Ö –Ω–∞–≤—ã–∫–∞—Ö –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è—Ö.."
              />
            </View>
          </View>
          {showBtn && (
            <View style={{marginBottom: 8}}>
              <ButtonDefault
                active={true}
                title="–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è"
                onPress={() => {
                  setSavedSuccess(true);
                  setTimeout(() => {
                    setSavedSuccess(false);
                  }, 1000);
                }}
              />
            </View>
          )}
          {savedSuccess && (
            <SaveSuccess
              title="üëç –ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã."
              style={{marginBottom: 8}}
            />
          )}
          <ButtonDefault title="–≤—ã–π—Ç–∏ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è" style={{marginBottom: 8}} />
        </View>
      </ScrollView>
    </View>
  );
};

const styles = StyleSheet.create({
  groupBlock: {
    borderRadius: 2,
    shadowColor: 'red',
    shadowOpacity: 4,
    backgroundColor: '#fff',
    elevation: 2,
  },
  blockTitle: {
    marginTop: 20,
    marginBottom: 8,
    color: '#011627',
    textTransform: 'uppercase',
    opacity: 0.35,
    marginLeft: 8,
    fontSize: 10,
  },
  block: {
    justifyContent: 'center',
    height: 60,
  },
});

export default PersonalDataMaster;
